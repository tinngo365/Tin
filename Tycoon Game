import java.util.Scanner;
import java.math.*;
import java.util.Timer;
import java.util.TimerTask;
import java.text.DecimalFormat;
import java.util.concurrent.atomic.AtomicBoolean;

public class TycoonGame {
	static AtomicBoolean AB = new AtomicBoolean(true);
	static boolean val = AB.compareAndSet(true, false);
	DecimalFormat DF = new DecimalFormat("#.##");
	static TycoonBank Player1 = new TycoonBank(10.00);
	Timer timer;
	public TycoonGame() {	
		timer = new Timer(true);
		timer.schedule(new time(), 0, 1000);
	}
	class time extends TimerTask {
		
		DecimalFormat DF = new DecimalFormat("#.##");
		public void run() {
			if(val == true) {
			Player1.newBalance();
			DF.setGroupingUsed(true);
			DF.setGroupingSize(3);

			System.out.println("Your Businesses\n________________________"
					+ "\nLemonadeStands: " + Player1.getLemonadeStandsAmount()
					+ "\nStores: " + Player1.getStoresAmount()
					+ "\nHotels: " + Player1.getHotelsAmount());
			System.out.println("\n\nDay: " + Player1.getDays() + "\nCurrent Balance: $" + DF.format(Player1.getBalance()) + " | Current Profits: $" + DF.format(Player1.getProfit()));
		}}
	}
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		DecimalFormat DF = new DecimalFormat("#.##");
		DF.setGroupingUsed(true);
		DF.setGroupingSize(3);
		int i = 0;
		while(i < 1) {
		System.out.println("Welcome to Tin's Tycoon game! Start with $10.00 and become rich!"
				+ "\nStart by TYPING 'Start'");
		String select = sc.nextLine();
		select = select.replaceAll("\\s", "");
		select = select.replaceAll("\\W", "");
		select= select.toLowerCase();
		if(select.equals("start")) {
			i++;
			System.out.println("To start your journey, buy a lemonadestand by using the BUY option (PRESS 1)"
					+ "\nAfter that, select the company you would like to buy");
			int choose = sc.nextInt();
			if(choose == 1) {
				System.out.println("What would you like to buy?"
						+ "\nLemonade Stand: $" + DF.format(Player1.getLemonadeStandsCost()) + " PRESS (1)"
						+ "\nStore: $" + DF.format(Player1.getStoresCost()) + " PRESS (2)"
						+ "\nHotels: $" + DF.format(Player1.getHotelsCost()) + " PRESS (3)"
						+ "\nCurrent Balance: $" + DF.format(Player1.getBalance()) + " | Current Profits: $" + DF.format(Player1.getProfit()));
				int buyShop = sc.nextInt();
				if(buyShop == 1) {
					Player1.buyLemonadeStands();
				}
				if(buyShop == 2) {
					Player1.buyStores();
				}
				if(buyShop == 3) {
					Player1.buyHotels();
				}
			new TycoonGame();
			while(true) {
				choose = sc.nextInt();
				if(choose == 1) {
					val = AB.compareAndSet(true, false);
					val = AB.compareAndSet(true, false);
					System.out.println("What would you like to buy?"
							+ "\nLemonade Stand: $" + DF.format(Player1.getLemonadeStandsCost()) + " PRESS (1)"
							+ "\nStore: $" + DF.format(Player1.getStoresCost()) + " PRESS (2)"
							+ "\nHotels: $" + DF.format(Player1.getHotelsCost()) + " PRESS (3)"
							+ "\nCurrent Balance: $" + DF.format(Player1.getBalance()) + " | Current Profits: $" + DF.format(Player1.getProfit()));
					buyShop = sc.nextInt();
					val = AB.compareAndSet(false, true);
					if(buyShop == 1) {
						Player1.buyLemonadeStands();
					}
					if(buyShop == 2) {
						Player1.buyStores();
					}
					if(buyShop == 3) {
						Player1.buyHotels();
							}
						}
					}
				}
			}
		}
	}
}
